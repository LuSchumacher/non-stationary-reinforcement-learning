library(tidyverse)
library(magrittr)
library(rstan)
library(bayesplot)
library(cmdstanr)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
df <- read_csv("../data/TortoiseAndHareData.csv") %>%
filter(
phase == 0
) %>%
rename(
id = ID,
block = learningblock,
set_size = ns,
correct_resp = corchoice,
resp = choice,
correct = cor
) %>%
select(-iter, -pcor, -delay, -phase) %>%
mutate(
id = dense_rank(id),
block = block - 1,
stim = stim -1,
resp = resp - 1,
correct_resp = correct_resp -1
)
df %>% filter(rt < 0.3)
df %>%
filter(rt < 0.3) %>%
mean(.$correct)
df %>%
filter(rt < 0.3) %>%
mean(.$correct, na.rm = T)
subset <- df %>%
filter(rt < 0.3)
mean(subset$correct)
View(df)
df <- read_csv("../data/TortoiseAndHareData.csv") %>%
filter(
phase == 0
) %>%
rename(
id = ID,
block = learningblock,
set_size = ns,
correct_resp = corchoice,
resp = choice,
correct = cor
) %>%
select(-iter, -pcor, -delay, -phase) %>%
mutate(
id = dense_rank(id),
block = block - 1,
stim = stim -1,
resp = resp - 1,
correct_resp = correct_resp -1
reward = ifelse(correct == 1, 1, 0)
df <- read_csv("../data/TortoiseAndHareData.csv") %>%
filter(
phase == 0
) %>%
rename(
id = ID,
block = learningblock,
set_size = ns,
correct_resp = corchoice,
resp = choice,
correct = cor
) %>%
select(-iter, -pcor, -delay, -phase) %>%
mutate(
id = dense_rank(id),
block = block - 1,
stim = stim -1,
resp = resp - 1,
correct_resp = correct_resp -1,
reward = ifelse(correct == 1, 1, 0)
)
library(tidyverse)
library(magrittr)
library(rstan)
library(bayesplot)
library(cmdstanr)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
df <- read_csv("../data/TortoiseAndHareData.csv") %>%
filter(
phase == 0
) %>%
rename(
id = ID,
block = learningblock,
set_size = ns,
correct_resp = corchoice,
resp = choice,
correct = cor
) %>%
select(-iter, -pcor, -delay, -phase) %>%
mutate(
id = dense_rank(id),
block = block - 1,
stim = stim -1,
resp = resp - 1,
correct_resp = correct_resp -1,
reward = ifelse(correct == 1, 1, 0)
)
summary <- df %>%
group_by(id) %>%
summarise(
n = length(rt),
n_blocks = max(block)
)
write_csv(df, "data_prepared.csv")
